Analyse scénario 2 :

1) DNS

- Combien de noms de domaines sont résolus et quand ?

Le premier domaine est "discord.com" vers le début de la trace. Lors du début de l'appel il semble que nous avons 2 nouvelles requettes dns ou nous demandons "rotterdam2796.discord.media" (pour IPv4 et IPv6). Vers la fin de l'appel il semble que nous avons 2  dernières requettes pour "cdn.discordapp.com" (aussi pour les 2 types d'IP. 

- Quels sont les serveurs autoritatifs pour ces noms de domaines ? Sont-ils gérés par des entreprises différentes ?

Il semblerait que le nom primaire du serveur est : "gabe.ns.cloudfare.com". Dans la commande Dig (dig NS com puis dig @j.gtld-servers.net. A discord.com), nous trouvons également sima.ns.cloudflare.com. Avec la commande "dig NS rotterdam2796.discord.com" nous trouvons : gabe.ns.cloudfare.com. et dns.cloudflare.com. . Pareil pour cdn.discordapp.com.

- À quelles entreprises appartiennent les noms de domaines résolus ? Il y en a-t-il d’autres
que celle qui détient l’application ?

Il semblerait que les propriétaire soient cloudflare (obtenu via whois en plus de wireshark)

- Quels sont les types de requête DNS effectuées ?

Nous trouvons 1 standard query (pour l'adresse IPv6) ainsi que la réponse respective dans 1 premier temps. Lors du début de l'appel, nous trouvé 2  requettes (une pour IPv4 et une pour IPv6) pour le second domaine. A la fin de l'appel, nous trouvons le même scénario pour le dernier domaine. Concernant les réponses pour les domaines 2 et 3, nous trouvons plusieurs adresses possibles.

- Lorsqu’une requête DNS souhaite obtenir une adresse IP, quelle est sa famille ? Il y a-t-il une version IP préférée par l’application ?

Dans ce cas-ci nous demandons les 2 types d'adresse IP comme cité précédemment.

- Les requêtes contiennent elles des records additionnels ? Le cas échéant, à quoi servent-ils ?

Il n'y a pas de record additionnel 

- Observez-vous des comportements DNS inattendus ?

Non

2) Couche réseau

- Lorsque IPv4 est utilisé, l’application utilise-t-elle des techniques pour traverser les NAT?

Rien trouvé on dirait à vérifier

- Quels sont les adresses vers lesquels des paquets sont envoyés ? Retrouvez à quels noms de domaine elles correspondent, observez-vous une tendance particulière dans la famille d’adresse ? Pouvez-vous l’expliquer ?


"162.159.134.234","192.168.1.11"
"192.168.1.1","224.0.0.1"
"192.168.1.11","192.168.1.1"
"192.168.1.11","162.159.136.232"
"192.168.1.11","66.22.197.84"
"192.168.1.11","224.0.0.251"
"192.168.1.11","162.159.135.233"
"192.168.1.11","162.159.128.233"

192.168.1.11 : Adresse privée
192.168.1.1 : Adresse privée
224.0.0.1 Whois n'a aucune info
162.159.136.232 : Cloudflare
224.0.0.251 Whois n'a aucune info
162.159.134.234 : Cloudflare
66.22.197.84 : RIPE qui a ensuite fait un renvoie qui suit discord-nlrtm1-1
162.159.135.233 : Cloudflare
162.159.128.233 : Cloudflare

3) Couche Transport

- Quels sont les protocoles de transports utilisés pour chaque fonctionnalité ?

TCP, UDP, QUIC (+RTCP)

- Il y a-t-il plusieurs connexions vers un même nom de domaine ? Si oui, pouvez-vous l’expliquer ?

TODO

- Si vous observez du trafic QUIC, quels sont les versions utilisées ? Pouvez-vous identifier des extensions négociées dans le handshake ?

Il semble que la version est draft-29. Le handshake se fait sous TLSv1.3 avec annonce de la version 1.2 en intial. On retrouve une grande liste d'extension dans ce hanshake : length, server_name, supported_groups, application_layer_protocol_negotiation, signature_algorithms, key_share, psk_key_exhange_modes, early_data, supported_versions, quic_transport_parameters, compress_certificate, application_settings, pre_shaared_key. Il 

- Lorsque vous observez du trafic UDP, identifiez-vous d’autres protocoles que QUIC et DNS ? Expliquez comment ils sont utilisés par l’application.

On y retrouve RTCP. 
RTCP, acronyme de Real Time Transport Control Protocol, est un protocole utilisé en complément de RTP. Là où RTP transmet des données, RTCP, lui, fournit des méta-données statistiques sur la qualité du service (QoS).

4 ) Chiffrement et sécurité

- L’utilisation du DNS est-elle sécurisée ? Comment ?

Nous voyons dans les packets DNS que le protocol UDP est présent mais il s'agit d'un protocol de transport. Parmis les logiciel de sécurité on retrouve au cours de la trace du TLS (qu'on retrouve même avant le DNS).

- Quelles versions de TLS sont utilisées ? Précisez les protocoles de transport sécurisés par ces versions.

TLSV1.2 pour transporter les données. Dans les handshake avec QUIC on retrouve du cryptage avec TLS1.3. Il crypte QUIC(TLSV1.3) et TCP(TLSV1.2).

- Quel est la durée de vie des certificats utilisés ? Par qui sont-ils certifiés ?

Comme le handshake semble se faire dans un pkt QUIC, je ne trouve pas le temps de vie des certificats ni par qui ils sont fournis (#TODO)

- Lorsque vous pouvez observer l’établissement du chiffrement, quels sont les algorithmes de chiffrement utilisés ?

Parmis les ciper_suite utilisé on retrouve : TLS_AES_128_GCM_SHA256, TLS_AES_256_GCM_SHA384 et enfin TLS_CHACHA20_POLY1305_SHA256. Aucun méthode de compression n'est choisi (champs mis à null). La cipher suite choisi sera : TLS_AES_128_GCM_SHA256. On retrouve un second Handshake par la suite mais avec les même ciphersuite et la même méthode de compression (aucune). De plus on voit au cours de certains paquets TLS que le cipher suite choisi changera. Nous retrouvons également un Handshake TLS1.2 quand des adresses IPv6 contactent d'autres adresses IPV6 pkt(122-124).

- Si vous observez du trafic UDP, semble-t-il chiffré ? Comment est-il sécurisé ?

Le traffic UDP ne semble pas chiffré, le checksum reste d'ailleurs toujours sur unverified. 

5) Application

- Quels comportements observez-vous lors d’une conversation comparée à un appel ? Quel impact à l’utilisation de la vidéo par rapport à un appel audio uniquement ?

La grosse différence au cours de mes traces est la présence du protocoles QUIC ou non, il semble que quand nous ayons un échange vocal sans caméra, le protocole quic est présent. bcp + de pkt via caméra et partage que sans rien (logique on dira). Les différents flux audio et video sont envoyés et reçus via UDP également. 

- Quel est le volume de données échangées par l’application pour chacune de ces fonctionnalités ? Utilisez une base appropriée permettant la comparaison (par ex. par minute).

pyshark

- Il y a-t-il des serveurs relais utilisés pour interagir avec un utilisateur ou les applications communiquent-elles directement ? Observez-vous autre chose lorsque les deux utilisateurs sont sur le même réseau Wi-Fi ?

Voir les différents serveurs contactés via DNS 

- Est-ce qu’interagir avec un utilisateur se trouvant dans le même réseau Wi-Fi ou Ethernet à un impact sur la façon dont le trafic applicatif est transporté ? Il y a-t-il des serveurs relais ?

Voir cette semaine avec Flo 
